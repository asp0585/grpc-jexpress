syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option java_multiple_files = true;
option java_package = "com.flipkart.grpc.jexpress";
option java_outer_classname = "HudsonServiceProto";
option objc_class_prefix = "HLW";
import "google/api/annotations.proto";

package service;

// https://developers.google.com/protocol-buffers/docs/proto3

service HudsonService {
    rpc Iterator (IteratorRequest) returns (IteratorResponse) {
        option (google.api.http) = {
                   post: "/sherlock/v1/stores/iterator"
                   body: "*"
               };
    }

    rpc Filter (FilterRequest) returns (FilterResponse) {
        option (google.api.http) = {
                   post: "/sherlock/v1/stores/filter"
                   body: "*"
               };
    }
}

/*
Iterator POST request format:
{
	"store_path": "tyy/4io",
	"q": "abc",
	"products": {
		"start": 10,
		"count": 120,
		"popularity_score": "true"
	},
	"facet_show": "all",
	"sort": "price_asc",
	"view": {
		"id": "brand",
		"param": "singer"
	},
	"facets": {
		"price_range": {
			"from": "200",
			"to": "100"
		},
		"name_values": [{
			"name": "brand",
			"values": ["Disney+Infinity", "Disney+Princess"]
		}],
		"list_values": {
			"brand": {
				"value": ["Disney+Infinity", "Disney+Princess"]
			}
		}
	},
	"tags": ["womens-trimmers"],
	"smart_classify": true,
	"select": {
	    "augment": true,
	    "substores": false
	},
	"query": {
	    "stub": true,
	    "guide": false
	 }
}
*/

// Iterrator Request
message IteratorRequest {

    string store_path = 1 [json_name="store-path"];
    string q = 2;
    Products products = 3;
    View view = 4;
    string pincode = 5;
    string facet_show = 6;
    Facet facets = 7;
    repeated string tags = 8;
    bool smart_classify = 9;
    Select select = 10;
    Query query = 11;
    bool retry_spell_suggestion = 12;
}

message Products {
    uint32 start = 1;
    uint32 count = 2;
    bool popularity_score = 3;
}
message View {
    string id = 1;
    string count = 2;
}
message Select {
    bool augment = 1;
    bool substores = 2;
}
message Query {
    bool stub = 1;
    bool guide = 2;
}

// Specifying Facet
message Facet {

    PriceRange price_range = 1; // specifying price range
    repeated NameValue name_values = 6;
}

message NameValue {
    string name = 1;
    repeated string values = 2;
}

message PriceRange {
    string from = 1;
    string to = 2;
}

// Iterator Response
message IteratorResponse {
    bool isSuperStore = 1 [json_name="is-superstore"];
    SmartClassify smart_classify = 2 [json_name = "@smart-classify"];
}

message SmartClassify {
    string name = 1 [json_name = "@name"];
}

message Store {
    int32 id = 1;
    repeated string categories = 2;
    string title = 3;

}

// ----------------------------------

// Filter Request
message FilterRequest {


}

message FilterResponse {


}
